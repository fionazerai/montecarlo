[sample]

; refractive index of the sample
n     = 1.4       
; uncertainty in the refractive index of the sample
n_unc = 0.1       
; anisotropy of the sample
g     = 0.5       
; total thickness of the sample in cm
t     = 0.135
 
[spheres]

; 1 if the reflection sphere was present, 0 otherwise
R_sphere          = 1        
; reflectance of reflection sphere
R_pw              = 0.99     
; uncertainty in reflectance of reflection sphere
R_pw_unc          = 0.005    
; sample port fraction of reflection sphere
R_fs              = 0.023510 
; uncertainty in sample port fraction of reflection sphere
R_fs_unc          = 0.0011755
; source port fraction of reflection sphere
R_fp              = 0.054638 
; uncertainty in source port fraction of reflection sphere
R_fp_unc          = 0.0027319
; detector fraction of reflection sphere
R_fd              = 0.023510 
; uncertainty in detector fraction of reflection sphere
R_fd_unc          = 0.0011755
; angle threshold for specular reflection if no Rsphere is present (in degrees)
R_angle           = 0
; uncertainty in angle threshold for specular reflection (in degrees)
R_angle_unc       = 0
; 1 if specular reflectance was included in the reflection sphere, 0 if it wasn't
specular_included = 0        

; 1 if the transmission sphere was present, 0 otherwise
T_sphere          = 1        
; reflectance of transmission sphere
T_pw              = 0.99     
; uncertainty in reflectance of transmission sphere
T_pw_unc          = 0.005    
; sample port fraction of transmission sphere
T_fs              = 0.054638 
; uncertainty in sample port fraction of transmission sphere
T_fs_unc          = 0.0027319
; optional port fraction of transmission sphere
T_fp              = 0.023510 
; uncertainty in optional port fraction of transmission sphere
T_fp_unc          = 0.0011755
; detector fraction of transmission sphere
T_fd              = 0.023510 
; uncertainty in detector fraction of transmission sphere
T_fd_unc          = 0.0011755
; angle threshold for unscattered transmission if no Tsphere is present (in degrees)
T_angle           = 0.219523 
; uncertainty in angle threshold for unscattered transmission (in degrees)
T_angle_unc       = 0.000643 


; 1 if R_d and T_d were measured separately (single sphere experiment), 0 if they were measured simulataneously (dual-sphere experiment)
separate	  = 1 

[experiment]

; measured values a given sample (or set of samples with matching n, g, t)
; if multiple measurements are specified, the first must start on the same line as the '=' and
; 	each subsequent measurement must be on a new line immediately following the previous measurement
;
; for the minimization inverse solver, ONLY the first measurement in each catagory will be used
;   moreover, measurements that were not taken (like M_S, the measured specular reflectance) should be
;   entirely commented out, including their key

; measured reflectance
M_R     = 0.2716
		  0.3000

; uncertainty in measured reflectance
M_R_unc = 0.0002
	      0.0010

; measured transmittance
M_T     = 0.0853
		  0.1000

; uncertainty in measured transmittance
M_T_unc = 0.0001
	      0.0020

; measured unscattered transmittance
M_U     = 0.000022
	      0.0020

; uncertainty in measured unscattered transmittance
M_U_unc = 0.000003
	      0.0001

; measured specular reflectance
;M_S     =

; uncertainty in measured specular reflectance
;M_S_unc =


[lookup]

; prefix for all lookup table figures that will be generated
filename_prefix = EXAMPLE

; number of points along each axis to interpolate the input values to. final lookup table will have (dimensions)^2 number of points
dimensions      = 1000

; maximum value of R_d to display (maximum value on x-axis)
R_d_max         = 55        
; minimum value of R_d to display (minimum value on x-axis)
R_d_min         = 5         

; maximum value of T_d to display (maximum value on y-axis)
T_d_max         = 30         
; minimum value of T_d to display (minimum value on y-axis)
T_d_min         = 0        

; maximum percent uncertainty to display on uncertainty tables
perc_unc_max    = 15        
; minimum percent uncertainty to display on uncertainty tables
perc_unc_min    = 5         


; N and runs can be specified, or uncertainty and estimate instead
; if N and runs are specified then N*runs will be the total number of photons per simulation
; if uncertainty and estimate are specified then ceil(estimate/(uncertainty*uncertainty)) will be the total number of photons
; both methods produce the same end uncertainty with the same number of photons (but specifying the uncertainty is much faster)
; so if you want a certain runtime, specify N and runs - if you want a certain uncertainty, specify uncertainty and estimate

; number of photons per simulation, leave blank if specifying uncertainty and estimation below
N           = 100000                    
; number of runs per simulation, leave blank if specifying uncertainty and estimation below
runs        = 1                         

; desired uncertainty per measurement per simulation, leave blank if N and runs have been specified instead
;uncertainty =  0.001                   
; estimate for the largest measured value in every simulation (best to just leave at 1) leave blank if N and runs have been specified instead
;estimate    =  1                       

; number of times to sample distributions for the refractive index and sphere parameters
input_distributions_samples       = 100
; number of times to sample distributions for R_d_ISMC and T_d_ISMC to make the uncertainty lookup table
simulation_distributions_samples  = 200
; number of times to sample distributions for M_R and M_T to calculated the final uncertainty
measurement_distributions_samples = 1000


; N_mua and N_mus determine how many samples to simulate. The total number of samples simulated will be N_mua*N_mus
; The actual values for each coefficient are determined by mua_start, mua_base, mus_start, and mus_base
; The values to simulate are determined by mua_start*(mua_base)^i where i is an integer from 0 to N_mua [including 0 but not including N_mua] (and simillarly for mus)
; For example with N_mua = 4, mua_start = 3, and mua_base = 2 the simulated muas would be [3, 6, 12, 24]
; IMPORTANT NOTE the values for mus_start and mus_base are for the REDUCED scattering coefficient

; number of mua values to run
N_mua     = 13 
; number of mus' values to run
N_mus     = 11 

; starting value for mua in 1/cm
mua_start = 0.5
; geometric base for mua values
mua_base  = 1.2

; starting value for mus' (THE REDUCED SCATTERING COEFFICIENT) in 1/cm
mus_start = 10 
; geometric base for mus' values
mus_base  = 1.2

[minimization]

; the minimization technique uniquely requires an initial guess for mua and mus (the REDUCED scattering coefficient)
; 	in practice, this guess doesn't have to be that close to the actual solution, but the closer it is, the faster the
;	solver will finish. The minimization solver also requires minimum and maximum allowed values for mua and mus since
;   it sometimes returns nonsense results, which should be thrown away. Finally it requires a stepsize (denoted 'step')
;   and a tolerance. 'step' should be close to the maximum distance from the initial guess to the actual solution. 
;   Again, in practice it doesn't have to be very close, but the solver will finish MUCH faster if this step size is 
;   set well (recommended value: 5). 'tolerance' is how close to the actual solution the solver needs to get before 
;   it stops. Larger values will give you faster, but less precise results. Smaller values will take much longer but
;   give you a decent uncertainty (recommended value: 0.1)

; number of photons per FUNCTION EVALUATION (the minimization method will evaluate ISMC several hundred times per run)
N    = 10000
; number of times to run the solver per sample set from uncertainty distributions
runs = 5
; number of times to sample distributions for sample parameters, sphere parameters, and measurements
input_distributions_samples = 100

; initial guess for the absorption coefficient (1/cm)
mua_guess = 5
; initial guess for the REDUCED scattering coefficient (1/cm)
mus_guess = 45

; maximum allowed value for mua (1/cm)
mua_max  = 3                     
; minimum allowed value for mua (1/cm)
mua_min  = 1                     
                               
; maximum allowed value for mus (1/cm)
mus_max  = 40                  
; minimum allowed value for mus (1/cm)
mus_min  = 20 

; stepsize for PRAXIS (Powell's method)
step       = 5
; tolerance for PRAXIS (Powell's method)
tolerance = 0.1
